pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "pankaj91as/go-rest-api"
        DOCKER_REGISTRY_CREDENTIALS = 'dockerhub_credentials'
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout code from Development branch
                git branch: 'main', url: 'https://github.com/pankaj91as/GO-Rest-API.git'
            }
        }
        stage('Load Build Number from .env') {
            steps {
                script {
                    // Load the build number from the .env file
                    def envFile = readFile('.env')
                    def props = envFile.split('\n').collectEntries { line ->
                        line.split('=').with { [(it[0]): it[1]] }
                    }
                    env.BUILD_NUMBER = props.APP_VERSION
                }
            }
        }
        stage('Build Application Image') {
            steps {
                script {
                    // Build Application image
                    sh 'export PATH=$PATH:/usr/local/go/bin && make build-rest-server'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    sh 'docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to DockerHub
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_REGISTRY_CREDENTIALS}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    }
                    // Push Docker image to DockerHub
                    sh 'docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}'
                }
            }
        }
        stage('Start Ansible JOB') {
            steps {
                script {
                    // Pass BUILD_NUMBER to Ansible playbook as an extra variable
                    build job: 'Ansible', parameters: [
                        string(name: 'BUILD_NUMBER', value: "${BUILD_NUMBER}")
                    ]
                }
            }
        }
    }
    post {
        always {
            // Clean up workspace and Docker images
            sh 'docker rmi ${DOCKER_IMAGE}:${BUILD_NUMBER}'
            cleanWs()
        }
    }
}
